
/*
WITH matching_jets AS (
  SELECT event, SUM(j.pt) AS pt_sum
  FROM {input_table}
  CROSS JOIN UNNEST(Jet) AS _j(j)
  WHERE
    j.pt > 30 AND
    cardinality(
        filter(
            Electron,
            x -> x.pt > 10 AND
                 sqrt( (j.eta - x.eta) * (j.eta - x.eta) +
                       pow( (j.phi - x.phi + pi()) % (2 * pi()) - pi(), 2) ) < 0.4)) = 0 AND
    cardinality(
        filter(
            Muon,
            x -> x.pt > 10 AND
                 sqrt( (j.eta - x.eta) * (j.eta - x.eta) +
                       pow( (j.phi - x.phi + pi()) % (2 * pi()) - pi(), 2) ) < 0.4)) = 0
  GROUP BY event
)

SELECT
  FLOOR((
    CASE
      WHEN pt_sum < 15 THEN 14.9
      WHEN pt_sum > 200 THEN 200.1
      ELSE pt_sum
    END - 0.2) / 1.85) * 1.85 + 1.125 AS x,
  COUNT(*) AS y
FROM matching_jets
GROUP BY FLOOR((
    CASE
      WHEN pt_sum < 15 THEN 14.9
      WHEN pt_sum > 200 THEN 200.1
      ELSE pt_sum
    END - 0.2) / 1.85) * 1.85 + 1.125
ORDER BY x;


*/

source: hep is table('duckdb:../hep.parquet')

query: hep -> {
  declare: cond1 is Electron.count() {? Electron.pt > 10 and sqrt((Jet.eta - Electron.eta) * (Jet.eta - Electron.eta) + pow((Jet.phi - Electron.phi + pi()) % (2 * pi()) - pi(), 2)) < 0.4} = 0
  declare: cond2 is Muon.count() {? Muon.pt > 10 and sqrt((Jet.eta - Muon.eta) * (Jet.eta - Muon.eta) + pow((Jet.phi - Muon.phi + pi()) % (2 * pi()) - pi(), 2)) < 0.4} = 0
  declare: cond3 is Jet.pt > 30
  aggregate: pt_sum is sum(Jet.pt)
  group_by: event
  where: cond3, cond1, cond2
} -> {
    group_by: x is 
        floor(((pick 14.9 when pt_sum < 15
        pick 200.1 when pt_sum > 200
        else pt_sum) - 0.2) / 1.85) * 1.85 + 1.125
    order_by: x
    aggregate: y is count(*)
}